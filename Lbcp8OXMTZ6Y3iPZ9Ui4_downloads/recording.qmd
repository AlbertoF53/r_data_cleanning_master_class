

# Part 1

## Lesson 1


```{r}
palmerpenguins::penguins |> 
  skimr::skim()
modeldata::ames |> 
  janitor::clean_names() |> 
  skimr::skim(lot_frontage, lot_area)
```



## Lesson 2


```{r}
library(tidyverse)
penguins_wo_NAs <- palmerpenguins::penguins |> 
  filter(!is.na(sex))
penguins_wo_NAs |> 
  mutate(
    bill_flipper_ratio = bill_length_mm / flipper_length_mm
  ) |> 
  select(bill_length_mm, flipper_length_mm, bill_flipper_ratio)
```


```{r}
large_quantity <- function(x) {
  if (x > 39) {
    return(TRUE)
  } else {
    return(FALSE)
  }
}

penguins_wo_NAs  |> 
  mutate(
    large_bill_length = map_lgl(
      bill_length_mm,
      large_quantity
    )
  ) |> 
  select(bill_length_mm, large_bill_length)
```



## Lesson 3

```{r}
penguins_wo_NAs |> 
  summarize(
    mean_flipper_length = mean(flipper_length_mm),
    sd_flipper_length = sd(flipper_length_mm),
    flipper_lengths = list(flipper_length_mm)
  )
```


## Lesson 4


```{r}
palmerpenguins::penguins |> 
  mutate(
    bill_flipper_ratio = bill_length_mm / flipper_length_mm,
    mean_column = mean(bill_length_mm, na.rm = TRUE)
  ) |> 
  select(bill_length_mm, flipper_length_mm, mean_column)

palmerpenguins::penguins |> 
  summarize(
    mean_flipper_length = mean(flipper_length_mm, na.rm = TRUE),
    sd_flipper_length = sd(flipper_length_mm, na.rm = TRUE),
    flipper_lengths = list(flipper_length_mm)
  )
```


## Lesson 5

```{r}
penguins_wo_NAs |> 
  summarize(
    mean_flipper_length = mean(flipper_length_mm),
    sd_flipper_length = sd(flipper_length_mm),
    flipper_lengths = list(flipper_length_mm),
    .by = c(species, island)
  )

penguins_wo_NAs |> 
  group_by(species, island) |> 
  summarize(
    mean_flipper_length = mean(flipper_length_mm),
    sd_flipper_length = sd(flipper_length_mm),
    flipper_lengths = list(flipper_length_mm),
    .groups = 'drop'
  ) 

```



## Lesson 6

```{r}
palmerpenguins::penguins |> 
  mutate(
    mean_column = mean(bill_length_mm, na.rm = TRUE),
    .by = species
  ) |> 
  select(species, mean_column) |> 
  unique()
```


```{r}
palmerpenguins::penguins |> 
  mutate(
    bill_length_mm = scale(bill_length_mm),
    .by = species
  ) |>
  ggplot() +
  geom_density(
    aes(x = bill_length_mm, fill = species),
    alpha = 0.5
  )
```


## Lesson 7

```{r}
penguins_wo_NAs |> 
  summarize(
    mean_flipper_length = mean(flipper_length_mm),
    sd_flipper_length = sd(flipper_length_mm),
    flipper_lengths = list(flipper_length_mm),
    .by = c(species, island)
  ) |> 
  complete(
    species, island,
    fill = list(
      mean_flipper_length = 0,
      sd_flipper_length = 0
    )
  )
```

## Lesson 8

```{r}
penguins_wo_NAs |> 
  summarize(
    mean_bill_length    = mean(bill_length_mm),
    mean_bill_depth     = mean(bill_depth_mm),
    mean_flipper_length = mean(flipper_length_mm),
    mean_body_mass_g    = mean(body_mass_g),
  )

penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(
        bill_length_mm, bill_depth_mm,
        flipper_length_mm, body_mass_g
      ),
      .fns = mean,
      .names = 'mean_{.col |> str_remove("_mm")}'
    )
  )

penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(
        bill_length_mm, bill_depth_mm,
        flipper_length_mm, body_mass_g
      ),
      .fns = list(
        avg = mean
      ),
      .names = '{.fn}_{.col |> str_remove("_mm")}'
    )
  )

penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(
        bill_length_mm, bill_depth_mm,
        flipper_length_mm, body_mass_g
      ),
      .fns = list(
        avg = mean,
        standard_deviation  = sd
      ),
      .names = '{.fn}_{.col |> str_remove("_mm")}'
    )
  )

```


## Lesson 9

```{r}
tibble(
  text1 = c("I have 10 apples", "I have 20 apples"),
  text2 = c("I have 30 apples", "I have 40 apples")
) |> 
  mutate(
    across(
      .cols = everything(),
      .fns = parse_number,
      .names = "number_{.col}"
    )
  ) 
```


## Lesson 10


```{r}
penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(
        bill_length_mm, bill_depth_mm,
        flipper_length_mm, body_mass_g
      ),
      .fns = mean,
      .names = 'mean_{.col |> str_remove("_mm")}'
    ),
    sd_bill_length = sd(bill_length_mm)
  )
```



## Lesson 11

```{r}
penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(
        bill_length_mm, bill_depth_mm,
        flipper_length_mm, body_mass_g
      ),
      .fns = mean,
      .names = 'mean_{.col |> str_remove("_mm")}'
    ),
    sd_bill_length = sd(bill_length_mm),
    .by = species
  )
```



## Lesson 12

```{r}
range(penguins_wo_NAs$bill_length_mm)

penguins_wo_NAs |> 
  reframe(
    type = c('min', 'max'),
    across(
      .cols = c(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g),
      .fns = range
    ),
    .by = species
  )

penguins_wo_NAs |> 
  reframe(
    type = c('min', 'max'),
    across(
      .cols = c(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g),
      .fns = range
    ),
    .by = species
  ) |> 
  pivot_longer(
    cols = -(1:2),
    names_to = 'quantity',
    values_to = 'value',
  ) |> 
  pivot_wider(
    id_cols = c(quantity),
    names_from = c(species, type),
    values_from = value
  )
```

## Lesson 13


```{r}
penguins_wo_NAs |> 
  summarise(
    across(
      .cols = c(where(is.numeric), -year),
      .fns = mean,
      .names = 'mean_{.col |> str_remove("_mm")}'
    ),
    .by = species
  )
```


## Lesson 14

```{r}
palmerpenguins::penguins |> 
  summarise(
    across(
      .cols = c(where(is.numeric), -year),
      .fns = \(x) mean(x, na.rm = TRUE),
      .names = 'mean_{.col |> str_remove("_mm")}'
    ),
    .by = species
  )
```

## Lesson 15

```{r}
penguins_wo_NAs |> 
  select(where(is.numeric), -year)


penguins_wo_NAs |> 
  select(where(is.factor))

penguins_wo_NAs |> 
  select(where(is.factor), where(is.character))

penguins_wo_NAs |> 
  select(where(\(x) is.factor(x) || is.character(x)))

penguins_wo_NAs |> 
  select(where(\(x) is.numeric(x) && mean(x) > 200))

more_than_one_percent_missing <- \(x) mean(is.na(x)) > 0.01
palmerpenguins::penguins |> 
  select(where(more_than_one_percent_missing))
```


## Lesson 16


```{r}
penguins_wo_NAs |> 
  select(bill_length_mm:sex)

penguins_wo_NAs |> 
  select(ends_with('_mm'))

penguins_wo_NAs |> 
  select(starts_with('bill'))

penguins_wo_NAs |> 
  select(contains('length'))

penguins_wo_NAs |>
  select(matches("^[fb].*(_mm)$"))

my_cols <- c("bill_length_mm", "bill_depth_mm")
penguins_wo_NAs |> 
  select(all_of(my_cols))

my_cols <- c("bill_length_mm", "bill_depth_mm", 'asdfasd')
penguins_wo_NAs |> 
  select(any_of(my_cols))
```


## Lesson 17 - Bringing it all together

```{r}
ames <- modeldata::ames |> 
  janitor::clean_names()

ames_numeric <- ames |> 
  select(where(is.numeric))

ames_non_counts <- ames_numeric |> 
  select(
    where(\(x) !all(x %in% 0:10))
  )

ames_non_counts |> 
  select(contains('area'))

ames_non_counts |> 
  select(contains('sf'))

ames_non_counts |> 
  filter(
    gr_liv_area != first_flr_sf + second_flr_sf
  )
```


```{r}
ames |> 
  summarise(
    across(
      .cols = sale_price,
      .fns = list(
        min = min,
        avg = mean,
        median = median,
        max = max,
        standard_dev = sd,
        skewness = e1071::skewness
      ),
      .names = '{.fn}'
    )
  ) |> 
  pivot_longer(cols = everything())
```


```{r}
ames_top5 <- ames |> 
  mutate(
    neighborhood = fct_lump_n(
      neighborhood,
      n = 5
    )
  ) 

ranges <- ames_top5 |> 
  reframe(
    type = c('min', 'max'),
    sale_price = range(sale_price),
    .by = neighborhood
  )

ames_top5 |> 
  ggplot(aes(x = sale_price)) +
  geom_density(fill = 'grey80') +
  geom_point(
    data = ranges,
    aes(y = -0.3),
    shape = 5,
    size = 2
  ) +
  geom_text(
    data = ranges,
    aes(y = -1.2, label = sale_price |> scales::dollar())
  ) +
  facet_wrap(vars(neighborhood), nrow = 6) +
  scale_x_log10(labels = scales::label_dollar()) +
  theme_minimal(base_size = 16)
```


```{r}
selected_counts <- ames_numeric |> 
  select(
    sale_price,
    where(\(x) all(x %in% 0:5))
  ) |> 
  select(
    -contains('bsmt'),
    -contains('kitchen')
  )

grouped_counts <- selected_counts |> 
  mutate(
    across(
      .cols = -sale_price,
      .fns = \(x) if_else(
        x < 2,
        as.character(x),
        '2+'
      ) |> factor(levels = c(0:1, '2+'))
    )
  ) 

grouped_counts |> 
  pivot_longer(
    cols = -sale_price
  ) |> 
  mutate(
    sale_price = scale(sale_price |> log()),
    .by = name
  ) |> 
  ggplot(aes(x = sale_price)) +
  geom_density(fill = 'grey80') +
  facet_grid(
    rows = vars(name),
    cols = vars(value)
  ) +
  theme_minimal(base_size = 16) +
  scale_x_continuous()

```


















