---
title: "{fs} The package you need"
author: "Alberto Rapp"
date: March 30, 2025
format:
  html:
    code-link: true
    code-fold: true
    self-contained: true
    embed-resources: true
    toc: true
    theme: Zephyr
    number-sections: false
execute: 
  warning: false
  message: false
  echo: false
editor_options: 
  chunk_output_type: console
---

# {fs} package

In this [YouTube](https://www.youtube.com/watch?v=EfHVYXqIuJ4&t=4s), Alberto introduces the file system package.

Basically: [fs](http://fs.r-lib.org/) provides a cross-platform, uniform interface to file system operations. [fs](http://fs.r-lib.org/) uses [libuv](http://docs.libuv.org/en/v1.x/fs.html) under the hood, which gives a rock solid cross-platform interface to the filesystem.

It is a system allowing to organize folder and files within folders. It allows one to concatenate paths, and files together

## Displaying the directory tree

1.  We can use fs to display the structure of the directory of the folder `r_data_cleanning_master_class`.

2.  Next we can display a subdirectory

```{r file_dir_tree}
#| echo: true
#| warning: false

library(tidyverse)
library(fs)

#Displays the directory of the current project
dir_tree()

#Listing the files under the subdirectory Part_5 under Data
dir_tree('data/Part_5')

#Listing the files contained in the directory data/Part_5/ 
fs::dir_ls('data/Part_5')

```

## Directory information

The directory information function. It displays information about the files contained in a particular folder

```{r directory_information}
#| echo: true
#| warning: false

fs::dir_info('images')

fs::dir_info('data')


```

The `echo: false` option disables the printing of code (only output is displayed).
